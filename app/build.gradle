apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: "androidx.navigation.safeargs.kotlin"
apply plugin: 'com.google.gms.google-services'
apply plugin: 'io.fabric'
apply plugin: 'com.google.firebase.firebase-perf'

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("keystore.properties")

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))


android {
    signingConfigs {
        config {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    compileSdkVersion 29
    defaultConfig {
        applicationId "com.norvera.confession"
        minSdkVersion 23
        targetSdkVersion 29
        multiDexEnabled true
        versionCode 10
        versionName "1.1 - LINVS"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.incremental":"true",
                        "room.schemaLocation":
                                "$projectDir/schemas".toString()
                      ]
            }
        }

    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
        debug {
            //applicationIdSuffix ".debug"
            debuggable true
        }
    }
    dataBinding {
        enabled = true
    }
    androidExtensions {
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'androidx.core:core-ktx:'  + rootProject.core_ktx_version
    implementation 'androidx.appcompat:appcompat:' + rootProject.appcompat_version
    implementation 'androidx.constraintlayout:constraintlayout:' + rootProject.constraint_layout_version
    implementation 'androidx.lifecycle:lifecycle-extensions:' + rootProject.lifecycle_version
    implementation 'androidx.preference:preference-ktx:' + rootProject.preference_version
    implementation 'androidx.fragment:fragment-ktx:' + rootProject.fragment_ktx_version
    implementation project(':pflockscreen')

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$rootProject.coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$rootProject.coroutinesVersion"

    implementation 'androidx.recyclerview:recyclerview:' + rootProject.recyclerview_version
    implementation 'com.android.billingclient:billing:'+ rootProject.billing_version

    implementation 'com.google.firebase:firebase-core:' + rootProject.firebase_version
    implementation 'com.google.firebase:firebase-ads:' + rootProject.firebase_ads_version

    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"
    implementation 'com.google.android.material:material:' + rootProject.material_version
    implementation 'blue.aodev:material-values:1.1.1'

    // Add Performance Monitoring dependency line
    implementation 'com.google.firebase:firebase-perf:19.0.2'

    implementation "androidx.room:room-runtime:$rootProject.room_version"

    kapt "androidx.room:room-compiler:$rootProject.room_version"
    // For Kotlin use kapt instead of annotationProcessor

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$rootProject.room_version"
    // For Kotlin use kapt instead of annotationProcessor
    //Firebase Dependencies
    //Stetho
    implementation 'com.facebook.stetho:stetho:' + rootProject.stetho_version
    implementation 'com.crashlytics.sdk.android:crashlytics:' + rootProject.crashlytics_version
    implementation 'com.jakewharton.timber:timber:' + rootProject.timber_version
    testImplementation 'junit:junit:' + rootProject.junit_version
    androidTestImplementation 'androidx.test:runner:' + rootProject.runner_version
    androidTestImplementation 'androidx.test.espresso:espresso-core:' + rootProject.espresso_version
}
